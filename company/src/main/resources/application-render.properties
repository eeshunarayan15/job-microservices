# Application Configuration
spring.application.name=COMPANY
logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(%-5level) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx

server.servlet.context-path=/api/v1

# Microservice URLs (Render URLs)
job-service.url=https://job-SERVICE_ID.onrender.com
company-service.url=https://company-SERVICE_ID.onrender.com
review-service.url=https://review-SERVICE_ID.onrender.com

# JPA Configuration
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Logging
logging.level.org.hibernate.SQL=DEBUG

# Actuator
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*

# Distributed Tracing
management.tracing.sampling.probability=0.1
management.tracing.enabled=true

# Server Port (Render uses PORT environment variable)
server.port=${PORT:8081}

# ----------------------------
# Eureka Client (Render URLs)
# ----------------------------
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=https://registry-latest-ppno.onrender.com/eureka/

# Eureka Instance - For Cloud Deployment
eureka.instance.hostname=${RENDER_EXTERNAL_HOSTNAME:company}
eureka.instance.prefer-ip-address=false
eureka.instance.non-secure-port-enabled=false
eureka.instance.secure-port-enabled=true
eureka.instance.secure-port=${PORT:8081}
eureka.instance.instance-id=${spring.application.name}:${RENDER_EXTERNAL_HOSTNAME:localhost}:${PORT:8081}
eureka.instance.home-page-url=https://${RENDER_EXTERNAL_HOSTNAME:localhost}${server.servlet.context-path:/}
eureka.instance.status-page-url=https://${RENDER_EXTERNAL_HOSTNAME:localhost}/actuator/info
eureka.instance.health-check-url=https://${RENDER_EXTERNAL_HOSTNAME:localhost}/actuator/health

# Config Server (Optional - can be disabled for Render)
spring.config.import=optional:configserver:https://configserver-SERVICE_ID.onrender.com/

# ----------------------------
# PostgreSQL Database (Supabase)
# ----------------------------
spring.datasource.url=jdbc:postgresql://db.xkimvodjfzqdeevvrsfm.supabase.co:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=YOUR_SUPABASE_PASSWORD_HERE
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# PostgreSQL SSL Configuration (Required for Supabase)
spring.datasource.hikari.connection-init-sql=SELECT 1

# ----------------------------
# Messaging (CloudAMQP) Configuration
# ----------------------------
spring.rabbitmq.addresses=amqps://brzplmvm:s3_ScTBAKcUQ-tREAfCIBq2pIreT_Jlv@leopard.lmq.cloudamqp.com/brzplmvm

# Alternative: Individual properties (if addresses doesn't work)
# spring.rabbitmq.host=leopard.lmq.cloudamqp.com
# spring.rabbitmq.port=5671
# spring.rabbitmq.username=brzplmvm
# spring.rabbitmq.password=s3_ScTBAKcUQ-tREAfCIBq2pIreT_Jlv
# spring.rabbitmq.virtual-host=brzplmvm
# spring.rabbitmq.ssl.enabled=true

# ----------------------------
# Distributed Tracing (Zipkin) Configuration
# ----------------------------
management.zipkin.tracing.endpoint=https://zipkin-SERVICE_ID.onrender.com/api/v2/spans

# If you want to disable Zipkin for now:
# management.tracing.enabled=false
# management.zipkin.tracing.endpoint=