spring.application.name=REVIEW
spring.output.ansi.enabled=ALWAYS

logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(%-5level) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx

# Render port
server.port=8083
#updated the port
server.servlet.context-path=/api/v1

# Database Configuration - Use Render PostgreSQL URL
spring.profiles.active=${SPRING_PROFILES_ACTIVE}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}



# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Service URLs - Point to deployed services
#job-service.url=${JOB_SERVICE_URL:https://job-service.onrender.com}
#company-service.url=${COMPANY_SERVICE_URL:https://company-service.onrender.com}
#review-service.url=${REVIEW_SERVICE_URL:https://review-service.onrender.com}

# Actuator
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*

# Eureka Client - Point to deployed Eureka
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=${EUREKA_URL:https://registry-latest-ppno.onrender.com/eureka/}

# Eureka Instance - Use Render hostname
eureka.instance.hostname=${RENDER_EXTERNAL_HOSTNAME:review-service}
eureka.instance.prefer-ip-address=false
eureka.instance.instance-id=${spring.application.name}:${eureka.instance.hostname}:${server.port}
eureka.instance.non-secure-port-enabled=false
eureka.instance.secure-port-enabled=true
eureka.instance.secure-port=443
eureka.instance.home-page-url=https://${eureka.instance.hostname}/
eureka.instance.status-page-url=https://${eureka.instance.hostname}/api/v1/actuator/info
eureka.instance.health-check-url=https://${eureka.instance.hostname}/api/v1/actuator/health

# Zipkin Distributed Tracing
management.tracing.sampling.probability=0.1
management.tracing.enabled=true

# RabbitMQ - Use CloudAMQP or Render RabbitMQ
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}

# Logging
logging.level.root=info
logging.level.com.micro.reviews=DEBUG