# ------------------- Application -------------------
spring.application.name=JOB
server.port=8082
server.servlet.context-path=/api/v1

# ------------------- Service URLs -------------------
job-service.url=http://job:8082
company-service.url=http://company:8081
review-service.url=http://review:8083

# ------------------- Database -------------------
# Let Render env vars override everything
# ------------------- Database -------------------
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}


# ------------------- HikariCP Connection Pool -------------------
# Keep connections alive
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=30000

# Test connections to keep them alive
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.keepalive-time=60000

# Pool name for logging
spring.datasource.hikari.pool-name=HikariPool-CompanyService

# ------------------- JPA -------------------
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.database-platform=${Hibernate_dialect:org.hibernate.dialect.PostgreSQLDialect}

# ------------------- Logging (keep your pretty console for dev) -------------------
spring.output.ansi.enabled=ALWAYS
logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(%-5level) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx
logging.level.org.hibernate.SQL=DEBUG
#spring.threads.virtual.enabled=true
# ------------------- Actuator -------------------
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health
management.health.circuitbreakers.enabled=true

# ------------------- Eureka -------------------
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://eureka-server:8761/eureka/}
eureka.instance.hostname=job
eureka.instance.prefer-ip-address=false
eureka.instance.instance-id=${spring.application.name}:${eureka.instance.hostname}:${server.port}

# ------------------- Distributed Tracing (Zipkin) -------------------
management.tracing.sampling.probability=0.1
management.tracing.enabled=${MANAGEMENT_TRACING_ENABLED:true}
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans

# ------------------- Resilience4J Circuit Breaker -------------------
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.companyBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.companyBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.companyBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based

# ------------------- Resilience4J Retry -------------------
resilience4j.retry.instances.companyBreaker.max-attempts=3
resilience4j.retry.instances.companyBreaker.wait-duration=500ms
logging.level.io.github.resilience4j.retry=DEBUG
logging.level.io.github.resilience4j=DEBUG

# ------------------- Rate Limiter -------------------
resilience4j.ratelimiter.instances.companyRateLimiter.timeout-duration=0s
resilience4j.ratelimiter.instances.companyRateLimiter.limit-refresh-period=1s
resilience4j.ratelimiter.instances.companyRateLimiter.limit-for-period=10

# ------------------- RabbitMQ (CloudAMQP) -------------------
spring.rabbitmq.addresses=${SPRING_RABBITMQ_ADDRESSES}


# =================== FEIGN LOGGING ===================
logging.level.com.micro.job.clients=DEBUG
logging.level.feign=DEBUG