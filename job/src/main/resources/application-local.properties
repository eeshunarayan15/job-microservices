
# Application Configuration
spring.application.name=JOB
server.port=8082 
server.servlet.context-path=/api/v1
job-service.url=http://localhost:8082
company-service.url=http://localhost:8081
review-service.url=http://localhost:8083

# Database Configuration - Must use a local PostgreSQL instance and dedicated DB
spring.datasource.url=jdbc:postgresql://localhost:5432/jobdb 
spring.datasource.username=postgres
spring.datasource.password=password

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Logging
logging.level.org.hibernate.SQL=DEBUG
spring.output.ansi.enabled=ALWAYS
logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(%-5level) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx

# Actuator
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health
management.health.circuitbreakers.enabled=true

# Eureka Client
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Eureka Instance - Local
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=false
eureka.instance.instance-id=${spring.application.name}:${eureka.instance.hostname}:${server.port}

# Distributed Tracing
management.tracing.sampling.probability=1.0
management.tracing.enabled=true
## Config Server
#spring.config.import=optional:configserver:http://localhost:8088
#spring.profiles.active=DEV

# Resilience4J Circuit Breaker (Configuration untouched, but provided for completeness)
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.companyBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.companyBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.companyBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based

# Resilience4J Retry
resilience4j.retry.instances.companyBreaker.max-attempts=3
resilience4j.retry.instances.companyBreaker.wait-duration=500ms
logging.level.io.github.resilience4j.retry=DEBUG
logging.level.io.github.resilience4j=DEBUG

# Rate Limiter
resilience4j.ratelimiter.instances.companyRateLimiter.timeout-duration=0s
resilience4j.ratelimiter.instances.companyRateLimiter.limit-refresh-period=1s
resilience4j.ratelimiter.instances.companyRateLimiter.limit-for-period=10

#Rabbit MQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.password=guest